<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaCircleButton3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSelect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABDRJREFUaEPt
        mG1MU1cYx3svtPQNGJQxEEXDFOuYSBi2tGHRqB8WjSwjJiQzc27DbHOTMbUZKDExWzQaXyKf5heDH4xK
        tvmauE3ZFFFxLgS24TTG+YKSIME5LCAhTv//W5rg7XGBQeXW3H/yC7fn/J/b55JznufcGnTp0qVL1/Mk
        G/gSFCqfIkyzwE3JGHUTf68DIwcjRZ8Bf2qh+7Tn0NqHssl4FZ/fVWYiQBWSLLVP37zkkvdI5SMy7i1P
        HcaPBKa1rfVIviOnatmNYPLkterSDsx1A6vi0qhKDJLUOWPbB1cGJx9ENpsuw7MwYNWevMA/bV1xiyh5
        kuiZymW0U3FrTKmgLXVB3ilR4kGyNrzzB3x/AzuDtCIZnLCkOc6KklaDZXQR/s+VSI2oXIqSW937VneJ
        ElYz4e1ZpxHzCJQo0WOsmaA366vFV0XJqsmrLm2VY4wtiKkHcbzBWMoMWhwF086IklXDyiTJ8m3E1AzE
        jlgjvcmmKEvMFc+BioeihAczYfHs7+G/D7YA7pkRKxOwqawHJg4MU27Qk731vWuihIPgCNEXnzXxJ3hZ
        eYoYOFoqj7bF/I71eAnXJ0CsMjo0RYFGx+tZ/7l08r8t7zIm2M/CyzU/hYGjqXPjiwvq8CW9pqS4X/CZ
        /6WhnhQ/ZNVBbJ8oceLa77sXbbc0whuWzZoC+vN2l93hl+V/V/EAX9aMsaF0yATQ8fKn8xvVSQdx7Vl1
        N9pqYsM6CcLSsIplq+mJds+HQYVow1xpwPJU7TAl2psGxw7Gvd/XhUb1J3xclmE7tFXFZ08KafmvblzC
        DslKsUBxhWoq6M3e/r5w43oOrnlgjLf9Cg8blYUB4VJTxkdvnBclMXll4QXM8yHyFeeTOhbrTKsXxXkP
        r+03p7zAxPkAwykIwxY3ao/D6/zRe7hSWL+T5+acgecW4AEtqHmgO3fXinZRTKJ7yg+Y/wuMoznc4nvq
        NZMj9ryrxucXJWRNf5GV6ajiDpTNZofH+bPIO7lsIUvlP8BJ87MSS1ste4Fr7+p76qRce33dKJVs+3yH
        XYbrW/nffNGt9uV+/fENg2S4C08xeObiRjtujLM24jgQUtMzfUUsrUyuPWP5/Ab1PGMGKk4VGDNxwzXb
        MlLq1AkSc0pCA5baBdFcUsErbH7ctP/nKDKqSgdtL83LPqlOEt22h41OPT5jRwnfbf0ghzfQgniu92d8
        ErpUQkDJRCNsgn+zEqkhLQL3p29ZelmY+ABpi7y18PFHKk3+PFIpyVLrzN1lt0XJu2t8nQZJugPfmwG7
        9iSBPdE2y288qaofIMGVyY3LQ5qmxTe1c+bk+Aacb/qDyefuXM4faPkSlEeT1pUELlonJtfjyPEvH4AP
        hLFqZTZCNB5ctzvTjqcvnXMK150gmRORJL47t4M+wCoVkWKzWhG41KVLl67nXwbDY/836sE9JDATAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>